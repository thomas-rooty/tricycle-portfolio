import {useGLTF} from "@react-three/drei";
import {useStore} from "../../zustore";
import {useState, useEffect} from "react";

// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Model via KrStolorz on Sketchfab, CC-BY-4.0
// https://sketchfab.com/3d-models/low-poly-volkswagen-beetle-f680ad7e98e445eaafed1a70f2c53911

const Tricycle = () => {
	const direction = useStore(state => state.direction);
	const [rotation, setRotation] = useState([0, 0, 0]);

	useEffect(() => {
		if (direction === "left") {
			console.log("left");
			setRotation([0, 0, 0]);
		}
		if (direction === "right") {
			console.log("right");
			setRotation([0, 0, 0]);
		}
		if (direction === "none") {
			console.log("none");
			setRotation([0, 0, 0]);
		}
	}, [direction]);

	useGLTF.preload("/tricycle.gltf");
	const {nodes, materials} = useGLTF("/tricycle.gltf");
	return (
		<group position={[0, -0.6, 0]} rotation={rotation} scale={[0.2, 0.2, 0.2]}>
			<primitive object={nodes._rootJoint}/>
			<skinnedMesh
				castShadow
				geometry={nodes.Object_6.geometry}
				material={materials.Kids_Toy_TrikeBikeRedMat}
				skeleton={nodes.Object_6.skeleton}
			/>
			<skinnedMesh
				castShadow
				geometry={nodes.Object_7.geometry}
				material={materials.Kids_Toy_TrikebikeBlackPlasticMat}
				skeleton={nodes.Object_7.skeleton}
			/>
			<skinnedMesh
				castShadow
				geometry={nodes.Object_8.geometry}
				material={materials.Kids_Toy_TrikebikeBlackMat}
				skeleton={nodes.Object_8.skeleton}
			/>
			<skinnedMesh
				castShadow
				geometry={nodes.Object_9.geometry}
				material={materials.Kids_Toy_TrikebikeWhiteMat}
				skeleton={nodes.Object_9.skeleton}
			/>
			<skinnedMesh
				castShadow
				geometry={nodes.Object_10.geometry}
				material={materials.Kids_Toy_TrikebikeTyreMat}
				skeleton={nodes.Object_10.skeleton}
			/>
		</group>
	)
}

export default Tricycle;
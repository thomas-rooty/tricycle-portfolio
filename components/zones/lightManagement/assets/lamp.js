/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import {useStore} from "../../../zustore";
import {useFrame} from "@react-three/fiber";

const LampOn = (props) => {
  // Lever state
  const mcLeverPulled = useStore((state) => state.mcLeverPulled);
  const lampOn = useRef();

  useFrame(() => {
    lampOn.current.visible = mcLeverPulled;
  });

  // 3d Model
  const { nodes, materials } = useGLTF("/assets/mc_lamp.gltf");
  return (
    <group {...props} scale={0.05} dispose={null}>
      <mesh
        ref={lampOn}
        castShadow
        geometry={nodes["Redstone-lamp"].geometry}
        material={materials["Material.001"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

const LampOff = (props) => {
  // Lever state
  const mcLeverPulled = useStore((state) => state.mcLeverPulled);
  const lampOff = useRef();

  useFrame(() => {
    lampOff.current.visible = !mcLeverPulled;
  });

  // 3d Model
  const { nodes, materials } = useGLTF("/assets/mc_lamp_off.gltf");
  return (
    <group {...props} scale={0.05} dispose={null}>
      <mesh
        ref={lampOff}
        castShadow
        geometry={nodes["Redstone-lamp"].geometry}
        material={materials["Material.001"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/assets/mc_lamp.gltf");
useGLTF.preload("/assets/mc_lamp_off.gltf");

export { LampOn, LampOff };